/*
 * Copyright (c) 2021 Peraton Labs Inc  - All Rights Reserved.
 * Proprietary and confidential. Unauthorized copy or use of this file, via
 * any medium or mechanism is strictly prohibited.
 *
 * @author tchen
 *
 * Oct 5, 2021
 */

#pragma once

#include <fstream>

#include "Endpoint.hpp"
#include "Log.hpp"

#include "nlohmann/json.hpp"

using json = nlohmann::json;
using namespace std;

class ConfigComponent
{
private:
    string id = "Giant_Gecko";

    Endpoint *incoming = NULL;
    Endpoint *outgoing = NULL;
    Endpoint *aService = NULL;    // verifier attestation service
    Endpoint *outgoing2 = NULL;

public:
    ConfigComponent() {
    }
   
    string toString() {
        return SD_TO_STRING(
                "id: " + id + "\n" +
                "\tincoming: " + (incoming == NULL ? "" : incoming->toStringOneline()) + "\n" +
                "\toutgoing: " + (outgoing == NULL ? "" : outgoing->toStringOneline()) + "\n" +
                "\toutgoing2: " + (outgoing2 == NULL ? "" : outgoing2->toStringOneline()) + "\n" +
                "\taService: " + (aService == NULL ? "" : aService->toStringOneline()) + "\n");
    }
   
    Endpoint *getIncoming() {
        return incoming;
    }

    Endpoint *getOutgoing() {
        return outgoing;
    }

    Endpoint *getOutgoing2() {
        return outgoing2;
    }

    Endpoint *getAService() {
        return aService;
    }

    string &getID() {
        return id;
    }

    void setOutgoing(Endpoint *outgoing = NULL) {
        this->outgoing = outgoing;
    }

    void setID(string id) {
        this->id = id;
    }

    void setAService(Endpoint *aService) {
        this->aService = aService;
    }

    void setIncoming(Endpoint *incoming) {
        this->incoming = incoming;
    }

    void setOutgoing2(Endpoint *outgoing2) {
        this->outgoing2 = outgoing2;
    }
};
