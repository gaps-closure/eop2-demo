/*
 * Copyright (c) 2022 Peraton Labs Inc  - All Rights Reserved.
 * Proprietary and confidential. Unauthorized copy or use of this file, via
 * any medium or mechanism is strictly prohibited.
 *
 * @author tchen
 *
 * Oct 5, 2021
 */

#pragma once

#include "Config.hpp"
#include "Board.hpp"

using namespace std;

#define SEDIMENT "../../../"
#define DATA_DIR SEDIMENT "data/"
#define CONFIG_DIR SEDIMENT "configs/"

class CommandLine
{
protected:
    string publisherConfig    = CONFIG_DIR "boards/rpi-01";       // WKD-IBE publisher related materials
    string subscriberConfig   = CONFIG_DIR "boards/+";      // WKD-IBE subscriber related materials
    string rsaPublicKey       = DATA_DIR "publicRSA.pem";        // RSA public key in PEM format
    string rsaPrivateKey      = DATA_DIR "privateRSA.pem";       // RSA private key in PEM format
    string rsaSigningKey      = DATA_DIR "sign_key.pem";       // RSA signing key in PEM format
    string rsaVerificationKey = DATA_DIR "verify_key.pem";  // RSA verification key in PEM format
    string database = "../../../data/sediment.db";

public:
    CommandLine() {
    }

    void parseCmdline(int argc, char *argv[]);
    void printUsage(char *cmd);

    const string& getPublisherConfig() const {
        return publisherConfig;
    }

    void setPublisherConfig(const string &publisherConfig) {
        this->publisherConfig = publisherConfig;
    }

    const string& getSubscriberConfig() const {
        return subscriberConfig;
    }

    void setSubscriberConfig(const string &subscriberConfig) {
        this->subscriberConfig = subscriberConfig;
    }

    const string& getRsaPrivateKey() const {
        return rsaPrivateKey;
    }

    void setRsaPrivateKey(const string &rsaPrivateKey) {
        this->rsaPrivateKey = rsaPrivateKey;
    }

    const string& getRsaPublicKey() const {
        return rsaPublicKey;
    }

    void setRsaPublicKey(const string &rsaPublicKey) {
        this->rsaPublicKey = rsaPublicKey;
    }

    const string& getRsaSigningKey() const {
        return rsaSigningKey;
    }

    void setRsaSigningKey(const string &rsaSigningKey) {
        this->rsaSigningKey = rsaSigningKey;
    }

    const string& getRsaVerificationKey() const {
        return rsaVerificationKey;
    }

    void setRsaVerificationKey(const string &rsaVerificationKey) {
        this->rsaVerificationKey = rsaVerificationKey;
    }
};

